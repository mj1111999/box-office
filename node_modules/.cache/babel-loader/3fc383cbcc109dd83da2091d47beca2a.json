{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sem 7\\\\Internshala\\\\The Box Office\\\\src\\\\pages\\\\Starred.js\";\nimport React, { useState } from 'react';\nimport MainPageLayout from '../components/MainPageLayout';\nimport { useShows } from '../misc/custom-hooks';\n\nconst Starred = () => {\n  const [starred] = useShows();\n  const [shows, setShows] = useShows(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (starred && starred.length > 0) {} else {\n      setIsLoading(false);\n    }\n  }, [starred]);\n  return /*#__PURE__*/React.createElement(MainPageLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 10\n    }\n  }, \"this is starred\");\n};\n\nexport default Starred;","map":{"version":3,"sources":["D:/Sem 7/Internshala/The Box Office/src/pages/Starred.js"],"names":["React","useState","MainPageLayout","useShows","Starred","starred","shows","setShows","isLoading","setIsLoading","error","setError","useEffect","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,SAASC,QAAT,QAAyB,sBAAzB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAM,CAACC,OAAD,IAAYF,QAAQ,EAA1B;AAEA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;AAEAW,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIP,OAAO,IAAIA,OAAO,CAACQ,MAAR,GAAiB,CAAhC,EAAmC,CAClC,CADD,MACO;AACLJ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,GALQ,EAKN,CAACJ,OAAD,CALM,CAAT;AAOA,sBAAO,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACD,CAfD;;AAiBA,eAAeD,OAAf","sourcesContent":["import React, { useState } from 'react';\nimport MainPageLayout from '../components/MainPageLayout';\nimport { useShows } from '../misc/custom-hooks';\n\nconst Starred = () => {\n  const [starred] = useShows();\n\n  const [shows, setShows] = useShows(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (starred && starred.length > 0) {\n    } else {\n      setIsLoading(false);\n    }\n  }, [starred]);\n\n  return <MainPageLayout>this is starred</MainPageLayout>;\n};\n\nexport default Starred;\n"]},"metadata":{},"sourceType":"module"}