{"ast":null,"code":"import { useReducer, useEffect, useState } from 'react';\n\nfunction showsReducer(prevState, action) {\n  switch (action.type) {\n    case 'ADD':\n      {\n        return [...prevState, action.showId];\n      }\n\n    case 'REMOVE':\n      {\n        return prevState.filter(showId => showId !== action.showId);\n      }\n\n    default:\n      return prevState;\n  }\n}\n\nfunction usePersistedReducer(reducer, initialState, key) {\n  const [state, dispatch] = useReducer(reducer, initialState, initial => {\n    const persisted = localStorage.getItem(key);\n    return persisted ? JSON.parse(persisted) : initial;\n  });\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(state));\n  }, [state, key]);\n  return [state, dispatch];\n}\n\nexport function useShows(key = 'shows') {\n  return usePersistedReducer(showsReducer, [], key);\n}\nexport function useLastQuery(key = 'lastQuery') {\n  const [input, setInput] = useState(() => {\n    const persisted = sessionStorage.getItem(key);\n    return persisted ? JSON.parse(persisted) : '';\n  });\n}","map":{"version":3,"sources":["D:/Sem 7/Internshala/The Box Office/src/misc/custom-hooks.js"],"names":["useReducer","useEffect","useState","showsReducer","prevState","action","type","showId","filter","usePersistedReducer","reducer","initialState","key","state","dispatch","initial","persisted","localStorage","getItem","JSON","parse","setItem","stringify","useShows","useLastQuery","input","setInput","sessionStorage"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;;AAEA,SAASC,YAAT,CAAsBC,SAAtB,EAAiCC,MAAjC,EAAyC;AACvC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,KAAL;AAAY;AACV,eAAO,CAAC,GAAGF,SAAJ,EAAeC,MAAM,CAACE,MAAtB,CAAP;AACD;;AAED,SAAK,QAAL;AAAe;AACb,eAAOH,SAAS,CAACI,MAAV,CAAiBD,MAAM,IAAIA,MAAM,KAAKF,MAAM,CAACE,MAA7C,CAAP;AACD;;AAED;AACE,aAAOH,SAAP;AAVJ;AAYD;;AAED,SAASK,mBAAT,CAA6BC,OAA7B,EAAsCC,YAAtC,EAAoDC,GAApD,EAAyD;AACvD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,UAAU,CAACU,OAAD,EAAUC,YAAV,EAAwBI,OAAO,IAAI;AACrE,UAAMC,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqBN,GAArB,CAAlB;AAEA,WAAOI,SAAS,GAAGG,IAAI,CAACC,KAAL,CAAWJ,SAAX,CAAH,GAA2BD,OAA3C;AACD,GAJmC,CAApC;AAMAd,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,YAAY,CAACI,OAAb,CAAqBT,GAArB,EAA0BO,IAAI,CAACG,SAAL,CAAeT,KAAf,CAA1B;AACD,GAFQ,EAEN,CAACA,KAAD,EAAQD,GAAR,CAFM,CAAT;AAGA,SAAO,CAACC,KAAD,EAAQC,QAAR,CAAP;AACD;;AAED,OAAO,SAASS,QAAT,CAAkBX,GAAG,GAAG,OAAxB,EAAiC;AACtC,SAAOH,mBAAmB,CAACN,YAAD,EAAe,EAAf,EAAmBS,GAAnB,CAA1B;AACD;AAED,OAAO,SAASY,YAAT,CAAsBZ,GAAG,GAAG,WAA5B,EAAyC;AAC9C,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBxB,QAAQ,CAAC,MAAM;AACvC,UAAMc,SAAS,GAAGW,cAAc,CAACT,OAAf,CAAuBN,GAAvB,CAAlB;AAEA,WAAOI,SAAS,GAAGG,IAAI,CAACC,KAAL,CAAWJ,SAAX,CAAH,GAA2B,EAA3C;AACD,GAJiC,CAAlC;AAKD","sourcesContent":["import { useReducer, useEffect, useState } from 'react';\r\n\r\nfunction showsReducer(prevState, action) {\r\n  switch (action.type) {\r\n    case 'ADD': {\r\n      return [...prevState, action.showId];\r\n    }\r\n\r\n    case 'REMOVE': {\r\n      return prevState.filter(showId => showId !== action.showId);\r\n    }\r\n\r\n    default:\r\n      return prevState;\r\n  }\r\n}\r\n\r\nfunction usePersistedReducer(reducer, initialState, key) {\r\n  const [state, dispatch] = useReducer(reducer, initialState, initial => {\r\n    const persisted = localStorage.getItem(key);\r\n\r\n    return persisted ? JSON.parse(persisted) : initial;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(key, JSON.stringify(state));\r\n  }, [state, key]);\r\n  return [state, dispatch];\r\n}\r\n\r\nexport function useShows(key = 'shows') {\r\n  return usePersistedReducer(showsReducer, [], key);\r\n}\r\n\r\nexport function useLastQuery(key = 'lastQuery') {\r\n  const [input, setInput] = useState(() => {\r\n    const persisted = sessionStorage.getItem(key);\r\n\r\n    return persisted ? JSON.parse(persisted) : '';\r\n  });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}