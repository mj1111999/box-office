{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sem 7\\\\Internshala\\\\The Box Office\\\\src\\\\pages\\\\Show.js\";\n\n/* eslint-disable no-underscore-dangle */\nimport React, { useEffect, useReducer } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { apiGet } from '../misc/config';\nimport ShowMainData from '../components/show/ShowMainData';\nimport Details from '../components/show/Details';\nimport Seasons from '../components/show/Seasons';\nimport Cast from '../components/show/Cast';\nimport { InfoBlock, ShowPageWrapper } from './Show.styled';\n\nconst reducer = (prevState, action) => {\n  switch (action.type) {\n    case 'FETCH_SUCCESS':\n      {\n        return {\n          isLoading: false,\n          error: null,\n          show: action.show\n        };\n      }\n\n    case 'FETCH_FAILED':\n      {\n        return { ...prevState,\n          isLoading: false,\n          error: action.error\n        };\n      }\n\n    default:\n      return prevState;\n  }\n};\n\nconst initialState = {\n  show: null,\n  isLoading: true,\n  error: null\n};\n\nconst Show = () => {\n  const {\n    id\n  } = useParams();\n  const [{\n    show,\n    isLoading,\n    error\n  }, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => {\n    let isMounted = true;\n    apiGet(`/shows/${id}?embed[]=seasons&embed[]=cast`).then(results => {\n      if (isMounted) {\n        dispatch({\n          type: 'FETCH_SUCCESS',\n          show: results\n        });\n      }\n    }).catch(err => {\n      if (isMounted) {\n        dispatch({\n          type: 'FETCH_FAILED',\n          error: err.message\n        });\n      }\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, [id]);\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 12\n      }\n    }, \"Data is being loaded\");\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 12\n      }\n    }, \"Error occured: \", error);\n  }\n\n  return /*#__PURE__*/React.createElement(ShowPageWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ShowMainData, {\n    image: show.image,\n    name: show.name,\n    rating: show.rating,\n    summary: show.summary,\n    tags: show.genres,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(InfoBlock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"Details\"), /*#__PURE__*/React.createElement(Details, {\n    status: show.status,\n    network: show.network,\n    premiered: show.premiered,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, \"Seasons\"), /*#__PURE__*/React.createElement(Seasons, {\n    seasons: show._embedded.seasons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"Cast\"), /*#__PURE__*/React.createElement(Cast, {\n    cast: show._embedded.cast,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Show;","map":{"version":3,"sources":["D:/Sem 7/Internshala/The Box Office/src/pages/Show.js"],"names":["React","useEffect","useReducer","useParams","apiGet","ShowMainData","Details","Seasons","Cast","InfoBlock","ShowPageWrapper","reducer","prevState","action","type","isLoading","error","show","initialState","Show","id","dispatch","isMounted","then","results","catch","err","message","image","name","rating","summary","genres","status","network","premiered","_embedded","seasons","cast"],"mappings":"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","sourcesContent":["/* eslint-disable no-underscore-dangle */\r\nimport React, { useEffect, useReducer } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { apiGet } from '../misc/config';\r\nimport ShowMainData from '../components/show/ShowMainData';\r\nimport Details from '../components/show/Details';\r\nimport Seasons from '../components/show/Seasons';\r\nimport Cast from '../components/show/Cast';\r\nimport { InfoBlock, ShowPageWrapper } from './Show.styled';\r\n\r\nconst reducer = (prevState, action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_SUCCESS': {\r\n      return { isLoading: false, error: null, show: action.show };\r\n    }\r\n\r\n    case 'FETCH_FAILED': {\r\n      return { ...prevState, isLoading: false, error: action.error };\r\n    }\r\n\r\n    default:\r\n      return prevState;\r\n  }\r\n};\r\n\r\nconst initialState = {\r\n  show: null,\r\n  isLoading: true,\r\n  error: null,\r\n};\r\n\r\nconst Show = () => {\r\n  const { id } = useParams();\r\n\r\n  const [{ show, isLoading, error }, dispatch] = useReducer(\r\n    reducer,\r\n    initialState\r\n  );\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n\r\n    apiGet(`/shows/${id}?embed[]=seasons&embed[]=cast`)\r\n      .then(results => {\r\n        if (isMounted) {\r\n          dispatch({ type: 'FETCH_SUCCESS', show: results });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        if (isMounted) {\r\n          dispatch({ type: 'FETCH_FAILED', error: err.message });\r\n        }\r\n      });\r\n\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, [id]);\r\n\r\n  if (isLoading) {\r\n    return <div>Data is being loaded</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Error occured: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <ShowPageWrapper>\r\n      <ShowMainData\r\n        image={show.image}\r\n        name={show.name}\r\n        rating={show.rating}\r\n        summary={show.summary}\r\n        tags={show.genres}\r\n      />\r\n\r\n      <InfoBlock>\r\n        <h2>Details</h2>\r\n        <Details\r\n          status={show.status}\r\n          network={show.network}\r\n          premiered={show.premiered}\r\n        />\r\n      </InfoBlock>\r\n\r\n      <div>\r\n        <h2>Seasons</h2>\r\n        <Seasons seasons={show._embedded.seasons} />\r\n      </div>\r\n\r\n      <div>\r\n        <h2>Cast</h2>\r\n        <Cast cast={show._embedded.cast} />\r\n      </div>\r\n    </ShowPageWrapper>\r\n  );\r\n};\r\n\r\nexport default Show;\r\n"]},"metadata":{},"sourceType":"module"}